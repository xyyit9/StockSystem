<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.godwei.stock.mapper.user.TransactionMapper" >
  <resultMap id="BaseResultMap" type="com.godwei.stock.model.user.Transaction" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="dealDate" property="dealdate" jdbcType="TIMESTAMP" />
    <result column="count" property="count" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="procedureCost" property="procedurecost" jdbcType="DECIMAL" />
    <result column="stock_id" property="stockId" jdbcType="VARCHAR" />
    <result column="stock_name" property="stockName" jdbcType="VARCHAR" />
    <result column="bankroll_id" property="bankrollId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, dealDate, count, price, procedureCost, stock_id, stock_name, bankroll_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.godwei.stock.model.user.TransactionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from tb_transaction
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_transaction
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_transaction
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.godwei.stock.model.user.TransactionExample" >
    delete from tb_transaction
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.godwei.stock.model.user.Transaction" >
    insert into tb_transaction (id, dealDate, count, 
      price, procedureCost, stock_id, 
      stock_name, bankroll_id)
    values (#{id,jdbcType=INTEGER}, #{dealdate,jdbcType=TIMESTAMP}, #{count,jdbcType=INTEGER}, 
      #{price,jdbcType=DECIMAL}, #{procedurecost,jdbcType=DECIMAL}, #{stockId,jdbcType=VARCHAR}, 
      #{stockName,jdbcType=VARCHAR}, #{bankrollId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.godwei.stock.model.user.Transaction" >
    insert into tb_transaction
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="dealdate != null" >
        dealDate,
      </if>
      <if test="count != null" >
        count,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="procedurecost != null" >
        procedureCost,
      </if>
      <if test="stockId != null" >
        stock_id,
      </if>
      <if test="stockName != null" >
        stock_name,
      </if>
      <if test="bankrollId != null" >
        bankroll_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="dealdate != null" >
        #{dealdate,jdbcType=TIMESTAMP},
      </if>
      <if test="count != null" >
        #{count,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="procedurecost != null" >
        #{procedurecost,jdbcType=DECIMAL},
      </if>
      <if test="stockId != null" >
        #{stockId,jdbcType=VARCHAR},
      </if>
      <if test="stockName != null" >
        #{stockName,jdbcType=VARCHAR},
      </if>
      <if test="bankrollId != null" >
        #{bankrollId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_transaction
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.dealdate != null" >
        dealDate = #{record.dealdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.count != null" >
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.procedurecost != null" >
        procedureCost = #{record.procedurecost,jdbcType=DECIMAL},
      </if>
      <if test="record.stockId != null" >
        stock_id = #{record.stockId,jdbcType=VARCHAR},
      </if>
      <if test="record.stockName != null" >
        stock_name = #{record.stockName,jdbcType=VARCHAR},
      </if>
      <if test="record.bankrollId != null" >
        bankroll_id = #{record.bankrollId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_transaction
    set id = #{record.id,jdbcType=INTEGER},
      dealDate = #{record.dealdate,jdbcType=TIMESTAMP},
      count = #{record.count,jdbcType=INTEGER},
      price = #{record.price,jdbcType=DECIMAL},
      procedureCost = #{record.procedurecost,jdbcType=DECIMAL},
      stock_id = #{record.stockId,jdbcType=VARCHAR},
      stock_name = #{record.stockName,jdbcType=VARCHAR},
      bankroll_id = #{record.bankrollId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.godwei.stock.model.user.Transaction" >
    update tb_transaction
    <set >
      <if test="dealdate != null" >
        dealDate = #{dealdate,jdbcType=TIMESTAMP},
      </if>
      <if test="count != null" >
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="procedurecost != null" >
        procedureCost = #{procedurecost,jdbcType=DECIMAL},
      </if>
      <if test="stockId != null" >
        stock_id = #{stockId,jdbcType=VARCHAR},
      </if>
      <if test="stockName != null" >
        stock_name = #{stockName,jdbcType=VARCHAR},
      </if>
      <if test="bankrollId != null" >
        bankroll_id = #{bankrollId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.godwei.stock.model.user.Transaction" >
    update tb_transaction
    set dealDate = #{dealdate,jdbcType=TIMESTAMP},
      count = #{count,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      procedureCost = #{procedurecost,jdbcType=DECIMAL},
      stock_id = #{stockId,jdbcType=VARCHAR},
      stock_name = #{stockName,jdbcType=VARCHAR},
      bankroll_id = #{bankrollId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>