<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.godwei.stock.mapper.manage.FundMapper" >
  <resultMap id="BaseResultMap" type="com.godwei.stock.model.manage.Fund" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="usable" property="usable" jdbcType="DECIMAL" />
    <result column="freezed" property="freezed" jdbcType="DECIMAL" />
    <result column="incash" property="incash" jdbcType="DECIMAL" />
    <result column="total" property="total" jdbcType="DECIMAL" />
    <result column="tocalStock" property="tocalstock" jdbcType="DECIMAL" />
    <result column="transactionPw" property="transactionpw" jdbcType="VARCHAR" />
    <result column="withdrawalsPw" property="withdrawalspw" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="idcard" property="idcard" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, usable, freezed, incash, total, tocalStock, transactionPw, withdrawalsPw, name, 
    idcard
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.godwei.stock.model.manage.FundExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from tb_fund
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id ="selectByNameAndIdcard" resultMap="BaseResultMap" parameterType="com.godwei.stock.model.manage.Fund">
    select * from tb_fund where name = #{name} and idcard = #{idcard}
  </select>

  <select id ="selectIdcardAndPw" resultMap="BaseResultMap" parameterType="com.godwei.stock.model.manage.Fund">
    select * from tb_fund where transactionPw = #{transactionpw} and idcard = #{idcard}
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_fund
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_fund
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.godwei.stock.model.manage.FundExample" >
    delete from tb_fund
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.godwei.stock.model.manage.Fund" >
    insert into tb_fund (id, usable, freezed, 
      incash, total, tocalStock, 
      transactionPw, withdrawalsPw, name, 
      idcard)
    values (#{id,jdbcType=INTEGER}, #{usable,jdbcType=DECIMAL}, #{freezed,jdbcType=DECIMAL}, 
      #{incash,jdbcType=DECIMAL}, #{total,jdbcType=DECIMAL}, #{tocalstock,jdbcType=DECIMAL}, 
      #{transactionpw,jdbcType=VARCHAR}, #{withdrawalspw,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{idcard,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.godwei.stock.model.manage.Fund" >
    insert into tb_fund
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="usable != null" >
        usable,
      </if>
      <if test="freezed != null" >
        freezed,
      </if>
      <if test="incash != null" >
        incash,
      </if>
      <if test="total != null" >
        total,
      </if>
      <if test="tocalstock != null" >
        tocalStock,
      </if>
      <if test="transactionpw != null" >
        transactionPw,
      </if>
      <if test="withdrawalspw != null" >
        withdrawalsPw,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="idcard != null" >
        idcard,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="usable != null" >
        #{usable,jdbcType=DECIMAL},
      </if>
      <if test="freezed != null" >
        #{freezed,jdbcType=DECIMAL},
      </if>
      <if test="incash != null" >
        #{incash,jdbcType=DECIMAL},
      </if>
      <if test="total != null" >
        #{total,jdbcType=DECIMAL},
      </if>
      <if test="tocalstock != null" >
        #{tocalstock,jdbcType=DECIMAL},
      </if>
      <if test="transactionpw != null" >
        #{transactionpw,jdbcType=VARCHAR},
      </if>
      <if test="withdrawalspw != null" >
        #{withdrawalspw,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null" >
        #{idcard,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_fund
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.usable != null" >
        usable = #{record.usable,jdbcType=DECIMAL},
      </if>
      <if test="record.freezed != null" >
        freezed = #{record.freezed,jdbcType=DECIMAL},
      </if>
      <if test="record.incash != null" >
        incash = #{record.incash,jdbcType=DECIMAL},
      </if>
      <if test="record.total != null" >
        total = #{record.total,jdbcType=DECIMAL},
      </if>
      <if test="record.tocalstock != null" >
        tocalStock = #{record.tocalstock,jdbcType=DECIMAL},
      </if>
      <if test="record.transactionpw != null" >
        transactionPw = #{record.transactionpw,jdbcType=VARCHAR},
      </if>
      <if test="record.withdrawalspw != null" >
        withdrawalsPw = #{record.withdrawalspw,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.idcard != null" >
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_fund
    set id = #{record.id,jdbcType=INTEGER},
      usable = #{record.usable,jdbcType=DECIMAL},
      freezed = #{record.freezed,jdbcType=DECIMAL},
      incash = #{record.incash,jdbcType=DECIMAL},
      total = #{record.total,jdbcType=DECIMAL},
      tocalStock = #{record.tocalstock,jdbcType=DECIMAL},
      transactionPw = #{record.transactionpw,jdbcType=VARCHAR},
      withdrawalsPw = #{record.withdrawalspw,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      idcard = #{record.idcard,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.godwei.stock.model.manage.Fund" >
    update tb_fund
    <set >
      <if test="usable != null" >
        usable = #{usable,jdbcType=DECIMAL},
      </if>
      <if test="freezed != null" >
        freezed = #{freezed,jdbcType=DECIMAL},
      </if>
      <if test="incash != null" >
        incash = #{incash,jdbcType=DECIMAL},
      </if>
      <if test="total != null" >
        total = #{total,jdbcType=DECIMAL},
      </if>
      <if test="tocalstock != null" >
        tocalStock = #{tocalstock,jdbcType=DECIMAL},
      </if>
      <if test="transactionpw != null" >
        transactionPw = #{transactionpw,jdbcType=VARCHAR},
      </if>
      <if test="withdrawalspw != null" >
        withdrawalsPw = #{withdrawalspw,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null" >
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.godwei.stock.model.manage.Fund" >
    update tb_fund
    set usable = #{usable,jdbcType=DECIMAL},
      freezed = #{freezed,jdbcType=DECIMAL},
      incash = #{incash,jdbcType=DECIMAL},
      total = #{total,jdbcType=DECIMAL},
      tocalStock = #{tocalstock,jdbcType=DECIMAL},
      transactionPw = #{transactionpw,jdbcType=VARCHAR},
      withdrawalsPw = #{withdrawalspw,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>