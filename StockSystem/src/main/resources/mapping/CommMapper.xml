<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.godwei.stock.mapper.user.CommMapper" >
  <resultMap id="BaseResultMap" type="com.godwei.stock.model.user.Comm" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="bankroll_id" property="bankrollId" jdbcType="INTEGER" />
    <result column="stock_id" property="stockId" jdbcType="VARCHAR" />
    <result column="comm_status" property="commStatus" jdbcType="VARCHAR" />
    <result column="commQuantity" property="commquantity" jdbcType="INTEGER" />
    <result column="accomplishQuantity" property="accomplishquantity" jdbcType="INTEGER" />
    <result column="commPrice" property="commprice" jdbcType="DECIMAL" />
    <result column="commDate" property="commdate" jdbcType="TIMESTAMP" />
    <result column="accomplishDate" property="accomplishdate" jdbcType="TIMESTAMP" />
    <result column="stock_name" property="stockName" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, bankroll_id, stock_id, comm_status, commQuantity, accomplishQuantity, commPrice,
    commDate, accomplishDate, stock_name, type
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.godwei.stock.model.user.CommExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from tb_comm
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from tb_comm
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_comm
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.godwei.stock.model.user.CommExample" >
    delete from tb_comm
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.godwei.stock.model.user.Comm" >
    insert into tb_comm (id, bankroll_id, stock_id,
    comm_status, commQuantity, accomplishQuantity,
    commPrice, commDate, accomplishDate,
    stock_name, type)
    values (#{id,jdbcType=INTEGER}, #{bankrollId,jdbcType=INTEGER}, #{stockId,jdbcType=VARCHAR},
    #{commStatus,jdbcType=VARCHAR}, #{commquantity,jdbcType=INTEGER}, #{accomplishquantity,jdbcType=INTEGER},
    #{commprice,jdbcType=DECIMAL}, #{commdate,jdbcType=TIMESTAMP}, #{accomplishdate,jdbcType=TIMESTAMP},
    #{stockName,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER})
  </insert>

  <select id="selectByCommDate" resultMap="BaseResultMap" parameterType="java.lang.String">
    select * from tb_comm where commDate = #{time}
  </select>
  <delete id="deleteByCommDate" parameterType="java.lang.String">
    delete from tb_comm where commDate = #{time}
  </delete>
  <insert id="insertSelective" parameterType="com.godwei.stock.model.user.Comm" >
    insert into tb_comm
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="bankrollId != null" >
        bankroll_id,
      </if>
      <if test="stockId != null" >
        stock_id,
      </if>
      <if test="commStatus != null" >
        comm_status,
      </if>
      <if test="commquantity != null" >
        commQuantity,
      </if>
      <if test="accomplishquantity != null" >
        accomplishQuantity,
      </if>
      <if test="commprice != null" >
        commPrice,
      </if>
      <if test="commdate != null" >
        commDate,
      </if>
      <if test="accomplishdate != null" >
        accomplishDate,
      </if>
      <if test="stockName != null" >
        stock_name,
      </if>
      <if test="type != null" >
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="bankrollId != null" >
        #{bankrollId,jdbcType=INTEGER},
      </if>
      <if test="stockId != null" >
        #{stockId,jdbcType=VARCHAR},
      </if>
      <if test="commStatus != null" >
        #{commStatus,jdbcType=VARCHAR},
      </if>
      <if test="commquantity != null" >
        #{commquantity,jdbcType=INTEGER},
      </if>
      <if test="accomplishquantity != null" >
        #{accomplishquantity,jdbcType=INTEGER},
      </if>
      <if test="commprice != null" >
        #{commprice,jdbcType=DECIMAL},
      </if>
      <if test="commdate != null" >
        #{commdate,jdbcType=TIMESTAMP},
      </if>
      <if test="accomplishdate != null" >
        #{accomplishdate,jdbcType=TIMESTAMP},
      </if>
      <if test="stockName != null" >
        #{stockName,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_comm
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.bankrollId != null" >
        bankroll_id = #{record.bankrollId,jdbcType=INTEGER},
      </if>
      <if test="record.stockId != null" >
        stock_id = #{record.stockId,jdbcType=VARCHAR},
      </if>
      <if test="record.commStatus != null" >
        comm_status = #{record.commStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.commquantity != null" >
        commQuantity = #{record.commquantity,jdbcType=INTEGER},
      </if>
      <if test="record.accomplishquantity != null" >
        accomplishQuantity = #{record.accomplishquantity,jdbcType=INTEGER},
      </if>
      <if test="record.commprice != null" >
        commPrice = #{record.commprice,jdbcType=DECIMAL},
      </if>
      <if test="record.commdate != null" >
        commDate = #{record.commdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.accomplishdate != null" >
        accomplishDate = #{record.accomplishdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.stockName != null" >
        stock_name = #{record.stockName,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_comm
    set id = #{record.id,jdbcType=INTEGER},
    bankroll_id = #{record.bankrollId,jdbcType=INTEGER},
    stock_id = #{record.stockId,jdbcType=VARCHAR},
    comm_status = #{record.commStatus,jdbcType=VARCHAR},
    commQuantity = #{record.commquantity,jdbcType=INTEGER},
    accomplishQuantity = #{record.accomplishquantity,jdbcType=INTEGER},
    commPrice = #{record.commprice,jdbcType=DECIMAL},
    commDate = #{record.commdate,jdbcType=TIMESTAMP},
    accomplishDate = #{record.accomplishdate,jdbcType=TIMESTAMP},
    stock_name = #{record.stockName,jdbcType=VARCHAR},
    type = #{record.type,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.godwei.stock.model.user.Comm" >
    update tb_comm
    <set >
      <if test="bankrollId != null" >
        bankroll_id = #{bankrollId,jdbcType=INTEGER},
      </if>
      <if test="stockId != null" >
        stock_id = #{stockId,jdbcType=VARCHAR},
      </if>
      <if test="commStatus != null" >
        comm_status = #{commStatus,jdbcType=VARCHAR},
      </if>
      <if test="commquantity != null" >
        commQuantity = #{commquantity,jdbcType=INTEGER},
      </if>
      <if test="accomplishquantity != null" >
        accomplishQuantity = #{accomplishquantity,jdbcType=INTEGER},
      </if>
      <if test="commprice != null" >
        commPrice = #{commprice,jdbcType=DECIMAL},
      </if>
      <if test="commdate != null" >
        commDate = #{commdate,jdbcType=TIMESTAMP},
      </if>
      <if test="accomplishdate != null" >
        accomplishDate = #{accomplishdate,jdbcType=TIMESTAMP},
      </if>
      <if test="stockName != null" >
        stock_name = #{stockName,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.godwei.stock.model.user.Comm" >
    update tb_comm
    set bankroll_id = #{bankrollId,jdbcType=INTEGER},
      stock_id = #{stockId,jdbcType=VARCHAR},
      comm_status = #{commStatus,jdbcType=VARCHAR},
      commQuantity = #{commquantity,jdbcType=INTEGER},
      accomplishQuantity = #{accomplishquantity,jdbcType=INTEGER},
      commPrice = #{commprice,jdbcType=DECIMAL},
      commDate = #{commdate,jdbcType=TIMESTAMP},
      accomplishDate = #{accomplishdate,jdbcType=TIMESTAMP},
      stock_name = #{stockName,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>